<?php

namespace App\DataFixtures;

use App\Entity\Account;
use App\Entity\Employee;
use App\Entity\Position;
use Doctrine\Bundle\FixturesBundle\Fixture;
use Doctrine\Persistence\ObjectManager;
use Faker\Factory;

class AppFixtures extends Fixture
{
    public function load(ObjectManager $manager)
    {
        // Fixtures generated by ChatGPT 4
        $faker = Factory::create('cs-CZ');

        // Create positions
        $positions = [];
        $positionNames = ['Pixel Wizard', 'Code Magician', 'Bug Exterminator', 'Keyboard Warrior', 'Digital Prophet', 'Java Juggler', 'Script Sorcerer', 'Data Wrangler', 'Cybersecurity Ninja', 'Algorithm Alchemist', 'Cloud Herder', 'AI Whisperer', 'Binary Bard', 'Git Guru', 'Bandwidth Bandit', 'Tech Evangelist'];
        foreach ($positionNames as $name) {
            $position = new Position($name);
            $position->setName($name);
            $manager->persist($position);
            $positions[] = $position;
        }

        // Create employees and assign positions and accounts
        for ($i = 0; $i < 10; $i++) {
            $employee = new Employee();
            $employee->setFirstName($faker->firstName);
            $employee->setSecondName($faker->lastName);
            $employee->setPhoneNumber($faker->optional(0.8)->phoneNumber);
            $employee->setEmail($faker->optional(0.8)->email);
            $employee->setNote($faker->optional(0.3)->sentence);
            $employee->setActive($faker->boolean);

            // Assign positions to employees
            $assignedPositions = $faker->randomElements($positions, rand(0, 3));
            foreach ($assignedPositions as $position) {
                $employee->addPosition($position);
            }

            // Create accounts for each employee
            for ($j = 0; $j < rand(2, 3); $j++) {
                $datetime = $faker->optional()->dateTimeBetween('now', '+1 year');
                $account = new Account($faker->userName, $datetime != null ? $datetime->setTime(23, 59, 59) : $datetime, $employee);
                $manager->persist($account);
            }

            $manager->persist($employee);
        }

        $manager->flush();
    }
}